<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
    >

    <!-- TODO default-autowire="byName"的作用 -->
    <!-- 父容器 -->
    <context:component-scan base-package="com.github">
        <context:exclude-filter type="regex" expression="com.github.controller.*"/>
    </context:component-scan>

    <aop:aspectj-autoproxy expose-proxy="true"/>

    <!-- idea使用tx命名空间 要注意tx命名空间的引入 idea会使用cache命名空间  -->
    <tx:annotation-driven/>

    <context:property-placeholder ignore-unresolvable="true" order="2" location="classpath:config-sunms-dev.properties"/>


    <!-- mobile库数据源  -->
    <bean id="mobileDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${mobile.jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="maxTotal" value="${maxTotal}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="initialSize" value="5"/>
        <!-- 为了debug正常 把查询最大时间设大点 -->
        <property name="defaultQueryTimeout" value="3600000"/>
    </bean>

    <!-- log库数据源  -->
    <bean id="logDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${log.jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="maxTotal" value="${maxTotal}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="initialSize" value="5"/>
        <!-- 为了debug正常 把查询最大时间设大点 -->
        <property name="defaultQueryTimeout" value="3600000"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mobileDataSource"/>
        <!-- 允许嵌套事务 -->
        <property name="nestedTransactionAllowed" value="true" />
    </bean>



    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mobileDataSource"/>
        <!--<property name="transactionFactory" ref="transactionFactory"/>-->
        <property name="configLocation" value="classpath:mybatis-configuration.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 单个mapper注册  -->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.UserMapper"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!-- 当mapper很多的时候 用自动扫描注册的方式比较方便   低版本的spring对factorybean的处理不好 导致了加载BUG 高版本的可以用的-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.github.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>